spryk: wrapper
description: "Adds a Registry code for Apps. It builds connect and disconnect logic."
priority: 1
mode: both
level: 2

arguments:
    organization:
        inherit: true
        default: Spryker

    module:
        inherit: true

excludedSpryks:
    - AddZedPresentationTwig
    - AddZedNavigationNode

preSpryks:
    - AddModule

postSpryks:
    - AddZedBusinessModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: Registry
              subDirectory:
                  value: Registry
              modelMethod:
                  value: connect
              input:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}Transfer ${{ module | lcfirst }}Transfer, \\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer"
              body:
                  value: "return ${{ module | lcfirst }}ResponseTransfer;"

    - AddZedBusinessModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: Registry
              subDirectory:
                  value: Registry
              modelMethod:
                  value: disconnect
              input:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}Transfer ${{ module | lcfirst }}Transfer, \\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer"
              body:
                  value: "return ${{ module | lcfirst }}ResponseTransfer;"

    - AddZedCommunicationControllerAction:
          excludedSpryks:
              - AddZedPresentationTwig
              - AddZedNavigationNode
          arguments:
              allowOverride:
                  value: true
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
              output:
                  value: "\\Symfony\\Component\\HttpFoundation\\JsonResponse"
              controller:
                  value: RegistryController
              controllerMethod:
                  value: connectAction
              body:
                  allowOverride: true
                  value:
                    - "${{ module | lcfirst }}ResponseTransfer = new {{ module }}ResponseTransfer();"
                    - "${{ module | lcfirst }}ResponseTransfer = $this->getFactory()"
                    - "        ->createRequestValidator()"
                    - "        ->validateConnectRequest($request, ${{ module | lcfirst }}ResponseTransfer);"
                    - ""
                    - "$responseBuilder = $this->getFactory()->createResponseBuilder();"
                    - ""
                    - "if (!${{ module | lcfirst }}ResponseTransfer->getIsSuccessful()) {"
                    - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}ResponseTransfer), \\Symfony\\Component\\HttpFoundation\\Response::HTTP_BAD_REQUEST);"
                    - "};"
                    - ""
                    - "${{ module | lcfirst }}Transfer = $this->getFactory()->createRequestToTransferMapper()->mapConnectRequestToTransfer($request);"
                    - ""
                    - "${{ module | lcfirst }}ResponseTransfer = $this->getFacade()->connect(${{ module | lcfirst }}Transfer, ${{ module | lcfirst }}ResponseTransfer);"
                    - ""
                    - "if (!${{ module | lcfirst }}ResponseTransfer->getIsSuccessful()) {"
                    - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}ResponseTransfer), \\Symfony\\Component\\HttpFoundation\\Response::HTTP_BAD_REQUEST /* What to put here? */);"
                    - "};"
                    - ""
                    - "return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}ResponseTransfer));"

    - AddZedCommunicationControllerAction:
          excludedSpryks:
              - AddZedPresentationTwig
              - AddZedNavigationNode
          arguments:
              allowOverride:
                  value: true
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
              output:
                  value: "\\Symfony\\Component\\HttpFoundation\\JsonResponse"
              controller:
                  value: RegistryController
              controllerMethod:
                  value: disconnectAction
              body:
                  allowOverride: true
                  value:
                      - "${{ module | lcfirst }}ResponseTransfer = new {{ module }}ResponseTransfer();"
                      - "${{ module | lcfirst }}ResponseTransfer = $this->getFactory()"
                      - "        ->createRequestValidator()"
                      - "        ->validateDisconnectRequest($request, ${{ module | lcfirst }}ResponseTransfer);"
                      - ""
                      - "$responseBuilder = $this->getFactory()->createResponseBuilder();"
                      - ""
                      - "if (!${{ module | lcfirst }}ResponseTransfer->getIsSuccessful()) {"
                      - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}ResponseTransfer), \\Symfony\\Component\\HttpFoundation\\Response::HTTP_BAD_REQUEST);"
                      - "};"
                      - ""
                      - "${{ module | lcfirst }}Transfer = $this->getFactory()->createRequestToTransferMapper()->mapDisconnectRequestToTransfer($request);"
                      - ""
                      - "${{ module | lcfirst }}ResponseTransfer = $this->getFacade()->disconnect(${{ module | lcfirst }}Transfer, ${{ module | lcfirst }}ResponseTransfer);"
                      - ""
                      - "if (!${{ module | lcfirst }}ResponseTransfer->getIsSuccessful()) {"
                      - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}ResponseTransfer), \\Symfony\\Component\\HttpFoundation\\Response::HTTP_BAD_REQUEST /* What to put here? */);"
                      - "};"
                      - ""
                      - "return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}ResponseTransfer));"

    - AddZedBusinessFacadeMethod:
        arguments:
            allowOverride:
                value: true
            facadeMethod:
                value: connect
            input:
                value: "\\Generated\\Shared\\Transfer\\{{ module }}Transfer ${{ module | lcfirst }}Transfer, \\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
            output:
                value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer"
            body:
                allowOverride: true
                value: "return $this->getFactory()->createRegistry()->connect(${{ module | lcfirst }}Transfer, ${{ module | lcfirst }}ResponseTransfer);"

    - AddZedBusinessFacadeMethod:
        arguments:
            allowOverride:
                value: true
            facadeMethod:
                value: disconnect
            input:
                value: "\\Generated\\Shared\\Transfer\\{{ module }}Transfer ${{ module | lcfirst }}Transfer, \\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
            output:
                value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer"
            body:
                allowOverride: true
                value: "return $this->getFactory()->createRegistry()->disconnect(${{ module | lcfirst }}Transfer, ${{ module | lcfirst }}ResponseTransfer);"

    - AddZedCommunicationModelMethod:
          arguments:
              className:
                  value: RequestValidator
              subDirectory:
                  value: RequestValidator
              modelMethod:
                  value: validateConnectRequest
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request, \\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer"
              body:
                  value: "return ${{ module | lcfirst }}ResponseTransfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              className:
                  value: RequestValidator
              subDirectory:
                  value: RequestValidator
              modelMethod:
                  value: validateDisconnectRequest
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request, \\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer"
              body:
                  value: "return ${{ module | lcfirst }}ResponseTransfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: RequestToTransferMapper
              subDirectory:
                  value: RequestMapper
              modelMethod:
                  value: mapConnectRequestToTransfer
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}Transfer"
              body:
                  value:
                      - "${{ module | lcfirst }}Transfer = new \\Generated\\Shared\\Transfer\\{{ module }}Transfer();"
                      - ""
                      - "return ${{ module | lcfirst }}Transfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: RequestToTransferMapper
              subDirectory:
                  value: RequestMapper
              modelMethod:
                  value: mapDisconnectRequestToTransfer
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}Transfer"
              body:
                  value:
                      - "${{ module | lcfirst }}Transfer = new \\Generated\\Shared\\Transfer\\{{ module }}Transfer();"
                      - ""
                      - "return ${{ module | lcfirst }}Transfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: ResponseBuilder
              subDirectory:
                  value: ResponseBuilder
              modelMethod:
                  value: createResponse
              input:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}ResponseTransfer ${{ module | lcfirst }}ResponseTransfer"
              output:
                  value: "array"
              body:
                  value:
                      - "return ${{ module | lcfirst }}ResponseTransfer->modifiedToArray();"

    - AddSharedTransferDefinition:
        arguments:
            name:
                value: "{{ module }}"

    - AddSharedTransferDefinition:
        arguments:
            name:
                value: "{{ module }}Response"
