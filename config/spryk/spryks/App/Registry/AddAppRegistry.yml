spryk: wrapper
description: "Adds a Registry code for Apps. It builds connect and disconnect logic."
priority: 1
mode: both
level: 2

arguments:
    organization:
        inherit: true
        default: Spryker

    module:
        inherit: true

excludedSpryks:
    - AddZedPresentationTwig
    - AddZedNavigationNode

preSpryks:
    - AddModule

postSpryks:
#    - AddZedBusinessModelMethod:
#          arguments:
#              allowOverride:
#                  value: true
#              className:
#                  value: Registry
#              subDirectory:
#                  value: Registry
#              modelMethod:
#                  value: connect
#              input:
#                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer ${{ module | lcfirst }}RegistryRequestTransfer, \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
#              output:
#                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer"
#              body:
#                  value: "return ${{ module | lcfirst }}RegistryResponseTransfer;"

    - AddZedBusinessModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: Registry
              subDirectory:
                  value: Registry
              modelMethod:
                  value: disconnect
              input:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer ${{ module | lcfirst }}RegistryRequestTransfer, \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer"
              body:
                  value: "return ${{ module | lcfirst }}RegistryResponseTransfer;"

#    - AddZedCommunicationControllerAction:
#          excludedSpryks:
#              - AddZedPresentationTwig
#              - AddZedNavigationNode
#          arguments:
#              allowOverride:
#                  value: true
#              input:
#                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
#              output:
#                  value: "\\Symfony\\Component\\HttpFoundation\\JsonResponse"
#              controller:
#                  value: RegistryController
#              controllerMethod:
#                  value: connectAction
#              body:
#                  allowOverride: true
#                  value:
#                    - "${{ module | lcfirst }}RegistryResponseTransfer = new {{ module }}RegistryResponseTransfer();"
#                    - "${{ module | lcfirst }}RegistryResponseTransfer = $this->getFactory()"
#                    - "        ->createRequestValidator()"
#                    - "        ->validateConnectRequest($request, ${{ module | lcfirst }}RegistryResponseTransfer);"
#                    - ""
#                    - "$responseBuilder = $this->getFactory()->createResponseBuilder();"
#                    - ""
#                    - "if (!${{ module | lcfirst }}RegistryResponseTransfer->getIsSuccessful()) {"
#                    - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}RegistryResponseTransfer), ${{ module | lcfirst }}RegistryResponseTransfer->getHttpResponseCode());"
#                    - "};"
#                    - ""
#                    - "${{ module | lcfirst }}RegistryRequestTransfer = $this->getFactory()->createRequestToTransferMapper()->mapConnectRequestToTransfer($request);"
#                    - ""
#                    - "${{ module | lcfirst }}RegistryResponseTransfer = $this->getFacade()->connect(${{ module | lcfirst }}RegistryRequestTransfer, ${{ module | lcfirst }}RegistryResponseTransfer);"
#                    - ""
#                    - "if (!${{ module | lcfirst }}RegistryResponseTransfer->getIsSuccessful()) {"
#                    - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}RegistryResponseTransfer), ${{ module | lcfirst }}RegistryResponseTransfer->getHttpResponseCode());"
#                    - "};"
#                    - ""
#                    - "return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}RegistryResponseTransfer));"

    - AddZedCommunicationControllerAction:
          excludedSpryks:
              - AddZedPresentationTwig
              - AddZedNavigationNode
          arguments:
              allowOverride:
                  value: true
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
              output:
                  value: "\\Symfony\\Component\\HttpFoundation\\JsonResponse"
              controller:
                  value: RegistryController
              controllerMethod:
                  value: disconnectAction
              body:
                  allowOverride: true
                  value:
                      - "${{ module | lcfirst }}RegistryResponseTransfer = new {{ module }}RegistryResponseTransfer();"
                      - "${{ module | lcfirst }}RegistryResponseTransfer = $this->getFactory()"
                      - "        ->createRequestValidator()"
                      - "        ->validateDisconnectRequest($request, ${{ module | lcfirst }}RegistryResponseTransfer);"
                      - ""
                      - "$responseBuilder = $this->getFactory()->createResponseBuilder();"
                      - ""
                      - "if (!${{ module | lcfirst }}RegistryResponseTransfer->getIsSuccessful()) {"
                      - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}RegistryResponseTransfer), ${{ module | lcfirst }}RegistryResponseTransfer->getHttpResponseCode());"
                      - "};"
                      - ""
                      - "${{ module | lcfirst }}RegistryRequestTransfer = $this->getFactory()->createRequestToTransferMapper()->mapDisconnectRequestToTransfer($request);"
                      - ""
                      - "${{ module | lcfirst }}RegistryResponseTransfer = $this->getFacade()->disconnect(${{ module | lcfirst }}RegistryRequestTransfer, ${{ module | lcfirst }}RegistryResponseTransfer);"
                      - ""
                      - "if (!${{ module | lcfirst }}RegistryResponseTransfer->getIsSuccessful()) {"
                      - "    return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}RegistryResponseTransfer), ${{ module | lcfirst }}RegistryResponseTransfer->getHttpResponseCode());"
                      - "};"
                      - ""
                      - "return $this->jsonResponse($responseBuilder->createResponse(${{ module | lcfirst }}RegistryResponseTransfer));"

#    - AddZedBusinessFacadeMethod:
#        arguments:
#            allowOverride:
#                value: true
#            facadeMethod:
#                value: connect
#            input:
#                value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer ${{ module | lcfirst }}RegistryRequestTransfer, \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
#            output:
#                value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer"
#            body:
#                allowOverride: true
#                value: "return $this->getFactory()->createRegistry()->connect(${{ module | lcfirst }}RegistryRequestTransfer, ${{ module | lcfirst }}RegistryResponseTransfer);"

#    - AddZedBusinessFacadeMethodTest:
#          arguments:
#              allowOverride:
#                  value: true
#              facadeMethod:
#                  value: connect
#              output:
#                  value: "void"
#              body:
#                  allowOverride: true
#                  value:
#                      - "${{ module | lcfirst }}RegistryRequestTransfer = new \\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer();"
#                      - "${{ module | lcfirst }}RegistryResponseTransfer = new \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer();"
#                      - ""
#                      - "${{ module | lcfirst }}RegistryResponseTransfer = $this->tester->getFacade()->connect(${{ module | lcfirst }}RegistryRequestTransfer, ${{ module | lcfirst }}RegistryResponseTransfer);"
#                      - ""
#                      - "$this->assertInstanceOf(\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer::class, ${{ module | lcfirst }}RegistryResponseTransfer);"
#                      - "$this->assertTrue(${{ module | lcfirst }}RegistryResponseTransfer->getIsSuccessful());"
#                      - "$this->assertSame(\\Symfony\\Component\\HttpFoundation\\Response::HTTP_OK, ${{ module | lcfirst }}RegistryResponseTransfer->getHttpStatusCode());"


    - AddZedBusinessFacadeMethod:
        arguments:
            allowOverride:
                value: true
            facadeMethod:
                value: disconnect
            input:
                value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer ${{ module | lcfirst }}RegistryRequestTransfer, \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
            output:
                value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer"
            body:
                allowOverride: true
                value: "return $this->getFactory()->createRegistry()->disconnect(${{ module | lcfirst }}RegistryRequestTransfer, ${{ module | lcfirst }}RegistryResponseTransfer);"

    - AddZedBusinessFacadeMethodTest:
        arguments:
            allowOverride:
                value: true
            facadeMethod:
                value: disconnect
            output:
                value: "void"
            body:
                allowOverride: true
                value:
                    - "${{ module | lcfirst }}RegistryRequestTransfer = new \\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer();"
                    - "${{ module | lcfirst }}RegistryResponseTransfer = new \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer();"
                    - ""
                    - "${{ module | lcfirst }}RegistryResponseTransfer = $this->tester->getFacade()->disconnect(${{ module | lcfirst }}RegistryRequestTransfer, ${{ module | lcfirst }}RegistryResponseTransfer);"
                    - ""
                    - "$this->assertInstanceOf(\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer::class, ${{ module | lcfirst }}RegistryResponseTransfer);"
                    - "$this->assertTrue(${{ module | lcfirst }}RegistryResponseTransfer->getIsSuccessful());"
                    - "$this->assertSame(\\Symfony\\Component\\HttpFoundation\\Response::HTTP_OK, ${{ module | lcfirst }}RegistryResponseTransfer->getHttpStatusCode());"

#    - AddZedCommunicationModelMethod:
#          arguments:
#              className:
#                  value: RequestValidator
#              subDirectory:
#                  value: RequestValidator
#              modelMethod:
#                  value: validateConnectRequest
#              input:
#                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request, \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
#              output:
#                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer"
#              body:
#                  value: "return ${{ module | lcfirst }}RegistryResponseTransfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              className:
                  value: RequestValidator
              subDirectory:
                  value: RequestValidator
              modelMethod:
                  value: validateDisconnectRequest
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request, \\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer"
              body:
                  value: "return ${{ module | lcfirst }}RegistryResponseTransfer;"

#    - AddZedCommunicationModelMethod:
#          arguments:
#              allowOverride:
#                  value: true
#              className:
#                  value: RequestToTransferMapper
#              subDirectory:
#                  value: RequestMapper
#              modelMethod:
#                  value: mapConnectRequestToTransfer
#              input:
#                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
#              output:
#                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer"
#              body:
#                  value:
#                      - "${{ module | lcfirst }}RegistryRequestTransfer = new \\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer();"
#                      - ""
#                      - "return ${{ module | lcfirst }}RegistryRequestTransfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: RequestToTransferMapper
              subDirectory:
                  value: RequestMapper
              modelMethod:
                  value: mapDisconnectRequestToTransfer
              input:
                  value: "\\Symfony\\Component\\HttpFoundation\\Request $request"
              output:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer"
              body:
                  value:
                      - "${{ module | lcfirst }}RegistryRequestTransfer = new \\Generated\\Shared\\Transfer\\{{ module }}RegistryRequestTransfer();"
                      - ""
                      - "return ${{ module | lcfirst }}RegistryRequestTransfer;"

    - AddZedCommunicationModelMethod:
          arguments:
              allowOverride:
                  value: true
              className:
                  value: ResponseBuilder
              subDirectory:
                  value: ResponseBuilder
              modelMethod:
                  value: createResponse
              input:
                  value: "\\Generated\\Shared\\Transfer\\{{ module }}RegistryResponseTransfer ${{ module | lcfirst }}RegistryResponseTransfer"
              output:
                  value: "array"
              body:
                  value:
                      - "return ${{ module | lcfirst }}RegistryResponseTransfer->modifiedToArray();"

    - AddSharedTransferDefinition:
          arguments:
              name:
                  value: "{{ module }}RegistryRequest"

    - AddSharedTransferProperty:
          arguments:
              name:
                  value: "{{ module }}RegistryResponse"
              propertyName:
                  value: "isSuccessful"
              propertyType:
                  value: "bool"

    - AddSharedTransferProperty:
          arguments:
              name:
                  value: "{{ module }}RegistryResponse"
              propertyName:
                  value: "httpStatusCode"
              propertyType:
                  value: "int"

    - AddSharedTransferProperty:
          arguments:
              name:
                  value: "{{ module }}RegistryResponse"
              propertyName:
                  value: "code"
              propertyType:
                  value: "string"

    - AddSharedTransferProperty:
          arguments:
              name:
                  value: "{{ module }}RegistryResponse"
              propertyName:
                  value: "status"
              propertyType:
                  value: "int"

    - AddSharedTransferProperty:
          arguments:
              name:
                  value: "{{ module }}RegistryResponse"
              propertyName:
                  value: "messages"
              propertyType:
                  value: "ResponseMessage[]"
              singular:
                  value: "message"

    - AddSharedTransferProperty:
          arguments:
              name:
                  value: "ResponseMessage"
              propertyName:
                  value: "message"
              propertyType:
                  value: "string"
